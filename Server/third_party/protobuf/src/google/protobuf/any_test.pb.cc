// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/any_test.proto

#include "google/protobuf/any_test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protobuf_unittest {
PROTOBUF_CONSTEXPR TestAny::TestAny(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.repeated_any_value_)*/{}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.any_value_)*/nullptr
  , /*decltype(_impl_.int32_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TestAnyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAnyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAnyDefaultTypeInternal() {}
  union {
    TestAny _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAnyDefaultTypeInternal _TestAny_default_instance_;
}  // namespace protobuf_unittest
static ::_pb::Metadata file_level_metadata_google_2fprotobuf_2fany_5ftest_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2fany_5ftest_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2fany_5ftest_2eproto = nullptr;

const uint32_t TableStruct_google_2fprotobuf_2fany_5ftest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAny, _impl_.int32_value_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAny, _impl_.any_value_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAny, _impl_.repeated_any_value_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAny, _impl_.text_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protobuf_unittest::TestAny)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protobuf_unittest::_TestAny_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fprotobuf_2fany_5ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036google/protobuf/any_test.proto\022\021protob"
  "uf_unittest\032\031google/protobuf/any.proto\"\207"
  "\001\n\007TestAny\022\023\n\013int32_value\030\001 \001(\005\022\'\n\tany_v"
  "alue\030\002 \001(\0132\024.google.protobuf.Any\0220\n\022repe"
  "ated_any_value\030\003 \003(\0132\024.google.protobuf.A"
  "ny\022\014\n\004text\030\004 \001(\tB\016B\014TestAnyProtob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto = {
    false, false, 240, descriptor_table_protodef_google_2fprotobuf_2fany_5ftest_2eproto,
    "google/protobuf/any_test.proto",
    &descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_once, descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_google_2fprotobuf_2fany_5ftest_2eproto::offsets,
    file_level_metadata_google_2fprotobuf_2fany_5ftest_2eproto, file_level_enum_descriptors_google_2fprotobuf_2fany_5ftest_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2fany_5ftest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_getter() {
  return &descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fprotobuf_2fany_5ftest_2eproto(&descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto);
namespace protobuf_unittest {

// ===================================================================

class TestAny::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& any_value(const TestAny* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
TestAny::_Internal::any_value(const TestAny* msg) {
  return *msg->_impl_.any_value_;
}
void TestAny::clear_any_value() {
  if (GetArenaForAllocation() == nullptr && _impl_.any_value_ != nullptr) {
    delete _impl_.any_value_;
  }
  _impl_.any_value_ = nullptr;
}
void TestAny::clear_repeated_any_value() {
  _impl_.repeated_any_value_.Clear();
}
TestAny::TestAny(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAny)
}
TestAny::TestAny(const TestAny& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TestAny* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_any_value_){from._impl_.repeated_any_value_}
    , decltype(_impl_.text_){}
    , decltype(_impl_.any_value_){nullptr}
    , decltype(_impl_.int32_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_any_value()) {
    _this->_impl_.any_value_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.any_value_);
  }
  _this->_impl_.int32_value_ = from._impl_.int32_value_;
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAny)
}

inline void TestAny::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.repeated_any_value_){arena}
    , decltype(_impl_.text_){}
    , decltype(_impl_.any_value_){nullptr}
    , decltype(_impl_.int32_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TestAny::~TestAny() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAny)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TestAny::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repeated_any_value_.~RepeatedPtrField();
  _impl_.text_.Destroy();
  if (this != internal_default_instance()) delete _impl_.any_value_;
}

void TestAny::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TestAny::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAny)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_any_value_.Clear();
  _impl_.text_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.any_value_ != nullptr) {
    delete _impl_.any_value_;
  }
  _impl_.any_value_ = nullptr;
  _impl_.int32_value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestAny::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 int32_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.int32_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any any_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_any_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Any repeated_any_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_repeated_any_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protobuf_unittest.TestAny.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TestAny::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAny)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int32_value = 1;
  if (this->_internal_int32_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_int32_value(), target);
  }

  // .google.protobuf.Any any_value = 2;
  if (this->_internal_has_any_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::any_value(this),
        _Internal::any_value(this).GetCachedSize(), target, stream);
  }

  // repeated .google.protobuf.Any repeated_any_value = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_any_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_any_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protobuf_unittest.TestAny.text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAny)
  return target;
}

size_t TestAny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAny)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any repeated_any_value = 3;
  total_size += 1UL * this->_internal_repeated_any_value_size();
  for (const auto& msg : this->_impl_.repeated_any_value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .google.protobuf.Any any_value = 2;
  if (this->_internal_has_any_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.any_value_);
  }

  // int32 int32_value = 1;
  if (this->_internal_int32_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_int32_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TestAny::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TestAny::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TestAny::GetClassData() const { return &_class_data_; }


void TestAny::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TestAny*>(&to_msg);
  auto& from = static_cast<const TestAny&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAny)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.repeated_any_value_.MergeFrom(from._impl_.repeated_any_value_);
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_has_any_value()) {
    _this->_internal_mutable_any_value()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_any_value());
  }
  if (from._internal_int32_value() != 0) {
    _this->_internal_set_int32_value(from._internal_int32_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TestAny::CopyFrom(const TestAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAny::IsInitialized() const {
  return true;
}

void TestAny::InternalSwap(TestAny* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_any_value_.InternalSwap(&other->_impl_.repeated_any_value_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAny, _impl_.int32_value_)
      + sizeof(TestAny::_impl_.int32_value_)
      - PROTOBUF_FIELD_OFFSET(TestAny, _impl_.any_value_)>(
          reinterpret_cast<char*>(&_impl_.any_value_),
          reinterpret_cast<char*>(&other->_impl_.any_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TestAny::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_getter, &descriptor_table_google_2fprotobuf_2fany_5ftest_2eproto_once,
      file_level_metadata_google_2fprotobuf_2fany_5ftest_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestAny*
Arena::CreateMaybeMessage< ::protobuf_unittest::TestAny >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestAny >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
