// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: define.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SquickStruct {

  /// <summary>Holder for reflection information generated from define.proto</summary>
  public static partial class DefineReflection {

    #region Descriptor
    /// <summary>File descriptor for define.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DefineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxkZWZpbmUucHJvdG8SDFNxdWlja1N0cnVjdCqCBAoORUdhbWVFdmVudENv",
            "ZGUSCwoHU1VDQ0VTUxAAEhAKDFVOS09XTl9FUlJPUhABEhEKDUFDQ09VTlRf",
            "RVhJU1QQAhIWChJBQ0NPVU5UUFdEX0lOVkFMSUQQAxIRCg1BQ0NPVU5UX1VT",
            "SU5HEAQSEgoOQUNDT1VOVF9MT0NLRUQQBRIZChVBQ0NPVU5UX0xPR0lOX1NV",
            "Q0NFU1MQBhIWChJWRVJJRllfS0VZX1NVQ0NFU1MQBxITCg9WRVJJRllfS0VZ",
            "X0ZBSUwQCBIYChRTRUxFQ1RTRVJWRVJfU1VDQ0VTUxAJEhUKEVNFTEVDVFNF",
            "UlZFUl9GQUlMEAoSEwoPQ0hBUkFDVEVSX0VYSVNUEG4SFQoRU1ZSWk9ORUlE",
            "X0lOVkFMSUQQbxIUChBDSEFSQUNURVJfTlVNT1VUEHASFQoRQ0hBUkFDVEVS",
            "X0lOVkFMSUQQcRIWChJDSEFSQUNURVJfTk9URVhJU1QQchITCg9DSEFSQUNU",
            "RVJfVVNJTkcQcxIUChBDSEFSQUNURVJfTE9DS0VEEHQSEQoNWk9ORV9PVkVS",
            "TE9BRBB1Eg4KCk5PVF9PTkxJTkUQdhIZChRJTlNVRkZJQ0lFTlRfRElBTU9O",
            "RBDIARIWChFJTlNVRkZJQ0lFTlRfR09MRBDJARIUCg9JTlNVRkZJQ0lFTlRf",
            "U1AQygEq6Q8KCkVHYW1lTXNnSUQSCgoGVU5LTk9XEAASEAoMRVZFTlRfUkVT",
            "VUxUEAESEwoPRVZFTlRfVFJBTlNQT1JUEAISEAoMQ0xPU0VfU09DS0VUEAMS",
            "GAoUV1RNX1dPUkxEX1JFR0lTVEVSRUQQChIaChZXVE1fV09STERfVU5SRUdJ",
            "U1RFUkVEEAsSFQoRV1RNX1dPUkxEX1JFRlJFU0gQDBIYChRMVE1fTE9HSU5f",
            "UkVHSVNURVJFRBAUEhoKFkxUTV9MT0dJTl9VTlJFR0lTVEVSRUQQFRIVChFM",
            "VE1fTE9HSU5fUkVGUkVTSBAWEhkKFVBUV0dfUFJPWFlfUkVHSVNURVJFRBAe",
            "EhsKF1BUV0dfUFJPWFlfVU5SRUdJU1RFUkVEEB8SFgoSUFRXR19QUk9YWV9S",
            "RUZSRVNIECASFwoTR1RXX0dBTUVfUkVHSVNURVJFRBAoEhkKFUdUV19HQU1F",
            "X1VOUkVHSVNURVJFRBApEhQKEEdUV19HQU1FX1JFRlJFU0gQKhIVChFEVFdf",
            "REJfUkVHSVNURVJFRBA8EhcKE0RUV19EQl9VTlJFR0lTVEVSRUQQPRISCg5E",
            "VFdfREJfUkVGUkVTSBA+EhAKDFNUU19ORVRfSU5GTxBGEhAKDFJFUV9MQUdf",
            "VEVTVBBQEhUKEUFDS19HQVRFX0xBR19URVNUEFESFQoRQUNLX0dBTUVfTEFH",
            "X1RFU1QQUhIVChFTVFNfU0VSVkVSX1JFUE9SVBBaEhIKDlNUU19IRUFSVF9C",
            "RUFUEGQSDQoJUkVRX0xPR0lOEGUSDQoJQUNLX0xPR0lOEGYSDgoKUkVRX0xP",
            "R09VVBBnEhIKDlJFUV9XT1JMRF9MSVNUEG4SEgoOQUNLX1dPUkxEX0xJU1QQ",
            "bxIVChFSRVFfQ09OTkVDVF9XT1JMRBBwEhUKEUFDS19DT05ORUNUX1dPUkxE",
            "EHESGQoVUkVRX0tJQ0tFRF9GUk9NX1dPUkxEEHISEwoPUkVRX0NPTk5FQ1Rf",
            "S0VZEHgSEwoPQUNLX0NPTk5FQ1RfS0VZEHoSFgoRUkVRX1NFTEVDVF9TRVJW",
            "RVIQggESFgoRQUNLX1NFTEVDVF9TRVJWRVIQgwESEgoNUkVRX1JPTEVfTElT",
            "VBCEARISCg1BQ0tfUk9MRV9MSVNUEIUBEhQKD1JFUV9DUkVBVEVfUk9MRRCG",
            "ARIUCg9SRVFfREVMRVRFX1JPTEUQhwESFQoQUkVRX1JFQ09WRVJfUk9MRRCI",
            "ARIXChJSRVFfTE9BRF9ST0xFX0RBVEEQjAESFwoSQUNLX0xPQURfUk9MRV9E",
            "QVRBEI0BEhcKElJFUV9TQVZFX1JPTEVfREFUQRCOARIXChJBQ0tfU0FWRV9S",
            "T0xFX0RBVEEQjwESEwoOUkVRX0VOVEVSX0dBTUUQlgESEwoOQUNLX0VOVEVS",
            "X0dBTUUQlwESEwoOUkVRX0xFQVZFX0dBTUUQmAESEwoOQUNLX0xFQVZFX0dB",
            "TUUQmQESEwoOUkVRX1NXQVBfU0NFTkUQmwESEwoOQUNLX1NXQVBfU0NFTkUQ",
            "nAESGAoTUkVRX1NXQVBfSE9NRV9TQ0VORRCdARIYChNBQ0tfU1dBUF9IT01F",
            "X1NDRU5FEJ4BEhoKFVJFUV9FTlRFUl9HQU1FX0ZJTklTSBCfARIaChVBQ0tf",
            "RU5URVJfR0FNRV9GSU5JU0gQoAESFQoQQUNLX09CSkVDVF9FTlRSWRDIARIV",
            "ChBBQ0tfT0JKRUNUX0xFQVZFEMkBEh4KGUFDS19PQkpFQ1RfUFJPUEVSVFlf",
            "RU5UUlkQygESHAoXQUNLX09CSkVDVF9SRUNPUkRfRU5UUlkQywESFQoQQUNL",
            "X1BST1BFUlRZX0lOVBDSARIXChJBQ0tfUFJPUEVSVFlfRkxPQVQQ0wESGAoT",
            "QUNLX1BST1BFUlRZX1NUUklORxDUARIYChNBQ0tfUFJPUEVSVFlfT0JKRUNU",
            "ENYBEhkKFEFDS19QUk9QRVJUWV9WRUNUT1IyENcBEhkKFEFDS19QUk9QRVJU",
            "WV9WRUNUT1IzENgBEhcKEkFDS19QUk9QRVJUWV9DTEVBUhDZARIQCgtBQ0tf",
            "QUREX1JPVxDcARITCg5BQ0tfUkVNT1ZFX1JPVxDdARIRCgxBQ0tfU1dBUF9S",
            "T1cQ3gESEwoOQUNLX1JFQ09SRF9JTlQQ3wESFQoQQUNLX1JFQ09SRF9GTE9B",
            "VBDgARIWChFBQ0tfUkVDT1JEX1NUUklORxDiARIWChFBQ0tfUkVDT1JEX09C",
            "SkVDVBDjARIXChJBQ0tfUkVDT1JEX1ZFQ1RPUjIQ5AESFwoSQUNLX1JFQ09S",
            "RF9WRUNUT1IzEOUBEhUKEEFDS19SRUNPUkRfQ0xFQVIQ+gESFAoPQUNLX1JF",
            "Q09SRF9TT1JUEPsBEhYKEUFDS19EQVRBX0ZJTklTSEVEEIQCEg0KCFJFUV9N",
            "T1ZFEKwCEg0KCEFDS19NT1ZFEK0CEg0KCFJFUV9DSEFUEN4CEg0KCEFDS19D",
            "SEFUEN8CEhYKEVJFUV9TS0lMTF9PQkpFQ1RYEJADEhYKEUFDS19TS0lMTF9P",
            "QkpFQ1RYEJEDEhIKDVJFUV9TS0lMTF9QT1MQkgMSEgoNQUNLX1NLSUxMX1BP",
            "UxCTAxIWChFBQ0tfT05MSU5FX05PVElGWRDYBBIXChJBQ0tfT0ZGTElORV9O",
            "T1RJRlkQ2QQqRwoJRUl0ZW1UeXBlEg0KCUVJVF9FUVVJUBAAEgsKB0VJVF9H",
            "RU0QARIOCgpFSVRfU1VQUExZEAISDgoKRUlUX1NDUk9MTBADKrcBCgpFU2tp",
            "bGxUeXBlEhYKEkJSSUVGX1NJTkdMRV9TS0lMTBAAEhUKEUJSSUVGX0dST1VQ",
            "X1NLSUxMEAESFwoTQlVMTEVUX1NJTkdMRV9TS0lMTBACEhgKFEJVTExFVF9S",
            "RUJPVU5EX1NLSUxMEAMSHAoYQlVMTEVUX1RBUkdFVF9CT01CX1NLSUxMEAQS",
            "GQoVQlVMTEVUX1BPU19CT01CX1NLSUxMEAUSDgoKRlVOQ19TS0lMTBAGKk0K",
            "CkVTY2VuZVR5cGUSEAoMTk9STUFMX1NDRU5FEAASFgoSU0lOR0xFX0NMT05F",
            "X1NDRU5FEAESFQoRTVVMVElfQ0xPTkVfU0NFTkUQAipGCghFTlBDVHlwZRIO",
            "CgpOT1JNQUxfTlBDEAASDAoISEVST19OUEMQARIOCgpUVVJSRVRfTlBDEAIS",
            "DAoIRlVOQ19OUEMQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SquickStruct.EGameEventCode), typeof(global::SquickStruct.EGameMsgID), typeof(global::SquickStruct.EItemType), typeof(global::SquickStruct.ESkillType), typeof(global::SquickStruct.ESceneType), typeof(global::SquickStruct.ENPCType), }, null, null));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///events
  /// </summary>
  public enum EGameEventCode {
    /// <summary>
    /// </summary>
    [pbr::OriginalName("SUCCESS")] Success = 0,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("UNKOWN_ERROR")] UnkownError = 1,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACCOUNT_EXIST")] AccountExist = 2,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACCOUNTPWD_INVALID")] AccountpwdInvalid = 3,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACCOUNT_USING")] AccountUsing = 4,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACCOUNT_LOCKED")] AccountLocked = 5,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACCOUNT_LOGIN_SUCCESS")] AccountLoginSuccess = 6,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("VERIFY_KEY_SUCCESS")] VerifyKeySuccess = 7,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("VERIFY_KEY_FAIL")] VerifyKeyFail = 8,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("SELECTSERVER_SUCCESS")] SelectserverSuccess = 9,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("SELECTSERVER_FAIL")] SelectserverFail = 10,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_EXIST")] CharacterExist = 110,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("SVRZONEID_INVALID")] SvrzoneidInvalid = 111,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_NUMOUT")] CharacterNumout = 112,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_INVALID")] CharacterInvalid = 113,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_NOTEXIST")] CharacterNotexist = 114,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_USING")] CharacterUsing = 115,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("CHARACTER_LOCKED")] CharacterLocked = 116,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ZONE_OVERLOAD")] ZoneOverload = 117,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("NOT_ONLINE")] NotOnline = 118,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("INSUFFICIENT_DIAMOND")] InsufficientDiamond = 200,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("INSUFFICIENT_GOLD")] InsufficientGold = 201,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("INSUFFICIENT_SP")] InsufficientSp = 202,
  }

  public enum EGameMsgID {
    /// <summary>
    /// </summary>
    [pbr::OriginalName("UNKNOW")] Unknow = 0,
    /// <summary>
    /// for events
    /// </summary>
    [pbr::OriginalName("EVENT_RESULT")] EventResult = 1,
    /// <summary>
    /// for events
    /// </summary>
    [pbr::OriginalName("EVENT_TRANSPORT")] EventTransport = 2,
    /// <summary>
    /// want to close some one
    /// </summary>
    [pbr::OriginalName("CLOSE_SOCKET")] CloseSocket = 3,
    [pbr::OriginalName("WTM_WORLD_REGISTERED")] WtmWorldRegistered = 10,
    [pbr::OriginalName("WTM_WORLD_UNREGISTERED")] WtmWorldUnregistered = 11,
    [pbr::OriginalName("WTM_WORLD_REFRESH")] WtmWorldRefresh = 12,
    [pbr::OriginalName("LTM_LOGIN_REGISTERED")] LtmLoginRegistered = 20,
    [pbr::OriginalName("LTM_LOGIN_UNREGISTERED")] LtmLoginUnregistered = 21,
    [pbr::OriginalName("LTM_LOGIN_REFRESH")] LtmLoginRefresh = 22,
    [pbr::OriginalName("PTWG_PROXY_REGISTERED")] PtwgProxyRegistered = 30,
    [pbr::OriginalName("PTWG_PROXY_UNREGISTERED")] PtwgProxyUnregistered = 31,
    [pbr::OriginalName("PTWG_PROXY_REFRESH")] PtwgProxyRefresh = 32,
    [pbr::OriginalName("GTW_GAME_REGISTERED")] GtwGameRegistered = 40,
    [pbr::OriginalName("GTW_GAME_UNREGISTERED")] GtwGameUnregistered = 41,
    [pbr::OriginalName("GTW_GAME_REFRESH")] GtwGameRefresh = 42,
    [pbr::OriginalName("DTW_DB_REGISTERED")] DtwDbRegistered = 60,
    [pbr::OriginalName("DTW_DB_UNREGISTERED")] DtwDbUnregistered = 61,
    [pbr::OriginalName("DTW_DB_REFRESH")] DtwDbRefresh = 62,
    [pbr::OriginalName("STS_NET_INFO")] StsNetInfo = 70,
    [pbr::OriginalName("REQ_LAG_TEST")] ReqLagTest = 80,
    [pbr::OriginalName("ACK_GATE_LAG_TEST")] AckGateLagTest = 81,
    [pbr::OriginalName("ACK_GAME_LAG_TEST")] AckGameLagTest = 82,
    [pbr::OriginalName("STS_SERVER_REPORT")] StsServerReport = 90,
    [pbr::OriginalName("STS_HEART_BEAT")] StsHeartBeat = 100,
    /// <summary>
    ///////////////////////////////////////////////////////////////////////////////////////
    /// </summary>
    [pbr::OriginalName("REQ_LOGIN")] ReqLogin = 101,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_LOGIN")] AckLogin = 102,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_LOGOUT")] ReqLogout = 103,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_WORLD_LIST")] ReqWorldList = 110,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_WORLD_LIST")] AckWorldList = 111,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_CONNECT_WORLD")] ReqConnectWorld = 112,
    [pbr::OriginalName("ACK_CONNECT_WORLD")] AckConnectWorld = 113,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_KICKED_FROM_WORLD")] ReqKickedFromWorld = 114,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_CONNECT_KEY")] ReqConnectKey = 120,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_CONNECT_KEY")] AckConnectKey = 122,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_SELECT_SERVER")] ReqSelectServer = 130,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_SELECT_SERVER")] AckSelectServer = 131,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_ROLE_LIST")] ReqRoleList = 132,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_ROLE_LIST")] AckRoleList = 133,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_CREATE_ROLE")] ReqCreateRole = 134,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_DELETE_ROLE")] ReqDeleteRole = 135,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_RECOVER_ROLE")] ReqRecoverRole = 136,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_LOAD_ROLE_DATA")] ReqLoadRoleData = 140,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_LOAD_ROLE_DATA")] AckLoadRoleData = 141,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_SAVE_ROLE_DATA")] ReqSaveRoleData = 142,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_SAVE_ROLE_DATA")] AckSaveRoleData = 143,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_ENTER_GAME")] ReqEnterGame = 150,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_ENTER_GAME")] AckEnterGame = 151,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_LEAVE_GAME")] ReqLeaveGame = 152,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_LEAVE_GAME")] AckLeaveGame = 153,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_SWAP_SCENE")] ReqSwapScene = 155,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_SWAP_SCENE")] AckSwapScene = 156,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_SWAP_HOME_SCENE")] ReqSwapHomeScene = 157,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_SWAP_HOME_SCENE")] AckSwapHomeScene = 158,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("REQ_ENTER_GAME_FINISH")] ReqEnterGameFinish = 159,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_ENTER_GAME_FINISH")] AckEnterGameFinish = 160,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_OBJECT_ENTRY")] AckObjectEntry = 200,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_OBJECT_LEAVE")] AckObjectLeave = 201,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_OBJECT_PROPERTY_ENTRY")] AckObjectPropertyEntry = 202,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_OBJECT_RECORD_ENTRY")] AckObjectRecordEntry = 203,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_PROPERTY_INT")] AckPropertyInt = 210,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_PROPERTY_FLOAT")] AckPropertyFloat = 211,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ACK_PROPERTY_STRING")] AckPropertyString = 212,
    /// <summary>
    ///EGMI_ACK_PROPERTY_DOUBLE				= 213;			//
    /// </summary>
    [pbr::OriginalName("ACK_PROPERTY_OBJECT")] AckPropertyObject = 214,
    [pbr::OriginalName("ACK_PROPERTY_VECTOR2")] AckPropertyVector2 = 215,
    [pbr::OriginalName("ACK_PROPERTY_VECTOR3")] AckPropertyVector3 = 216,
    [pbr::OriginalName("ACK_PROPERTY_CLEAR")] AckPropertyClear = 217,
    [pbr::OriginalName("ACK_ADD_ROW")] AckAddRow = 220,
    [pbr::OriginalName("ACK_REMOVE_ROW")] AckRemoveRow = 221,
    [pbr::OriginalName("ACK_SWAP_ROW")] AckSwapRow = 222,
    [pbr::OriginalName("ACK_RECORD_INT")] AckRecordInt = 223,
    [pbr::OriginalName("ACK_RECORD_FLOAT")] AckRecordFloat = 224,
    /// <summary>
    ///EGMI_ACK_RECORD_DOUBLE				= 225;
    /// </summary>
    [pbr::OriginalName("ACK_RECORD_STRING")] AckRecordString = 226,
    [pbr::OriginalName("ACK_RECORD_OBJECT")] AckRecordObject = 227,
    [pbr::OriginalName("ACK_RECORD_VECTOR2")] AckRecordVector2 = 228,
    [pbr::OriginalName("ACK_RECORD_VECTOR3")] AckRecordVector3 = 229,
    [pbr::OriginalName("ACK_RECORD_CLEAR")] AckRecordClear = 250,
    [pbr::OriginalName("ACK_RECORD_SORT")] AckRecordSort = 251,
    [pbr::OriginalName("ACK_DATA_FINISHED")] AckDataFinished = 260,
    [pbr::OriginalName("REQ_MOVE")] ReqMove = 300,
    [pbr::OriginalName("ACK_MOVE")] AckMove = 301,
    [pbr::OriginalName("REQ_CHAT")] ReqChat = 350,
    [pbr::OriginalName("ACK_CHAT")] AckChat = 351,
    [pbr::OriginalName("REQ_SKILL_OBJECTX")] ReqSkillObjectx = 400,
    [pbr::OriginalName("ACK_SKILL_OBJECTX")] AckSkillObjectx = 401,
    [pbr::OriginalName("REQ_SKILL_POS")] ReqSkillPos = 402,
    [pbr::OriginalName("ACK_SKILL_POS")] AckSkillPos = 403,
    [pbr::OriginalName("ACK_ONLINE_NOTIFY")] AckOnlineNotify = 600,
    [pbr::OriginalName("ACK_OFFLINE_NOTIFY")] AckOfflineNotify = 601,
  }

  public enum EItemType {
    /// <summary>
    ///the equipment which can add props
    /// </summary>
    [pbr::OriginalName("EIT_EQUIP")] EitEquip = 0,
    /// <summary>
    ///the gem ca be embed to the equipment
    /// </summary>
    [pbr::OriginalName("EIT_GEM")] EitGem = 1,
    /// <summary>
    ///expendable items for player, such as a medicine that cures
    /// </summary>
    [pbr::OriginalName("EIT_SUPPLY")] EitSupply = 2,
    /// <summary>
    ///special items that can call a hero or others, special items can do what you want to do
    /// </summary>
    [pbr::OriginalName("EIT_SCROLL")] EitScroll = 3,
  }

  public enum ESkillType {
    /// <summary>
    ///this kind of skill just can damage one object
    /// </summary>
    [pbr::OriginalName("BRIEF_SINGLE_SKILL")] BriefSingleSkill = 0,
    /// <summary>
    ///this kind of skill can damage multiple objects
    /// </summary>
    [pbr::OriginalName("BRIEF_GROUP_SKILL")] BriefGroupSkill = 1,
    /// <summary>
    ///this kind of bullet just can damage one object
    /// </summary>
    [pbr::OriginalName("BULLET_SINGLE_SKILL")] BulletSingleSkill = 2,
    /// <summary>
    ///this kind of bullet can damage multiple objects via rebound
    /// </summary>
    [pbr::OriginalName("BULLET_REBOUND_SKILL")] BulletReboundSkill = 3,
    /// <summary>
    ///this kind of bullet can damage multiple objects who around the target when the bullet touched the target object
    /// </summary>
    [pbr::OriginalName("BULLET_TARGET_BOMB_SKILL")] BulletTargetBombSkill = 4,
    /// <summary>
    ///this kind of bullet can damage multiple objects  who around the target when the bullet arrived the position
    /// </summary>
    [pbr::OriginalName("BULLET_POS_BOMB_SKILL")] BulletPosBombSkill = 5,
    [pbr::OriginalName("FUNC_SKILL")] FuncSkill = 6,
  }

  public enum ESceneType {
    /// <summary>
    ///public town, only has one group available for players is 1
    /// </summary>
    [pbr::OriginalName("NORMAL_SCENE")] NormalScene = 0,
    /// <summary>
    ///private room, only has one player per group and it will be destroyed if the player leaved from group.
    /// </summary>
    [pbr::OriginalName("SINGLE_CLONE_SCENE")] SingleCloneScene = 1,
    /// <summary>
    ///private room, only has more than one player per group and it will be destroyed if all players leaved from group.
    /// </summary>
    [pbr::OriginalName("MULTI_CLONE_SCENE")] MultiCloneScene = 2,
  }

  public enum ENPCType {
    /// <summary>
    /// </summary>
    [pbr::OriginalName("NORMAL_NPC")] NormalNpc = 0,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("HERO_NPC")] HeroNpc = 1,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("TURRET_NPC")] TurretNpc = 2,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("FUNC_NPC")] FuncNpc = 3,
  }

  #endregion

}

#endregion Designer generated code
